{"version":3,"file":"app.bundle.js","sources":["webpack:///src/app.ts","webpack:///node_modules/angular2-onsenui/src/angular2-onsenui.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-navigator.ts","webpack:///node_modules/angular2-onsenui/src/ons/params.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-tabbar.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-switch.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-range.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-input.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-pull-hook.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-lazy-repeat.ts","webpack:///node_modules/angular2-onsenui/src/directives/ons-splitter.ts","webpack:///node_modules/angular2-onsenui/src/ons/notification.ts","webpack:///node_modules/angular2-onsenui/src/ons/platform.ts","webpack:///node_modules/angular2-onsenui/src/ons/alert-dialog-factory.ts","webpack:///node_modules/angular2-onsenui/src/ons/component-loader.ts","webpack:///node_modules/angular2-onsenui/src/ons/popover-factory.ts","webpack:///node_modules/angular2-onsenui/src/ons/dialog-factory.ts","webpack:///node_modules/angular2-onsenui/src/ons/modal-factory.ts","webpack:///src/app.routing.ts","webpack:///src/app/components/home/home.ts","webpack:///src/app/components/home/demos/pull-hook.ts","webpack:///src/app/components/home/demos/lazy-repeat.ts","webpack:///src/app/components/home/demos/splitter.ts","webpack:///src/app/components/home/demos/fab.ts","webpack:///src/app/components/home/demos/speed-dial.ts","webpack:///src/app/components/animations/animations.ts","webpack:///src/app/components/forms/forms.ts","webpack:///src/app/components/dialogs/dialogs.ts","webpack:///src/app/kitchen-sink.ts","webpack:///src/app/components/tabbar/tabbar.ts"],"sourcesContent":["import {enableProdMode, NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport {LocationStrategy, HashLocationStrategy} from '@angular/common';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {HttpModule} from '@angular/http';\r\nimport {RouterModule} from '@angular/router';\r\nimport {OnsenModule} from 'angular2-onsenui';\r\n\r\nimport {routing, appRoutingProviders}      from './app.routing';\r\nimport {KitchenSink}                       from './app/kitchen-sink';\r\nimport {Tabbar}                            from './app/components/tabbar/tabbar';\r\nimport {Home}                              from './app/components/home/home';\r\nimport {PullHook}                          from './app/components/home/demos/pull-hook';\r\nimport {LazyRepeat}                        from './app/components/home/demos/lazy-repeat';\r\nimport {Splitter}                          from './app/components/home/demos/splitter';\r\nimport {Fab}                               from './app/components/home/demos/fab';\r\nimport {SpeedDial}                         from './app/components/home/demos/speed-dial';\r\nimport {Animations, TempPage}              from './app/components/animations/animations';\r\nimport {Forms}                             from './app/components/forms/forms';\r\nimport {Dialogs, TempDialog, TempPopover}  from './app/components/dialogs/dialogs';\r\n\r\n// enableProdMode()\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        OnsenModule,\r\n        HttpModule,\r\n        RouterModule,\r\n        routing,\r\n    ],\r\n    declarations: [\r\n        KitchenSink,\r\n        Tabbar,\r\n        Home,\r\n        PullHook,\r\n        LazyRepeat,\r\n        Splitter,\r\n        Fab,\r\n        SpeedDial,\r\n        Animations,\r\n        TempPage,\r\n        Forms,\r\n        Dialogs,\r\n        TempDialog,\r\n        TempPopover,\r\n    ],\r\n    entryComponents: [\r\n        PullHook,\r\n        LazyRepeat,\r\n        Splitter,\r\n        Fab,\r\n        SpeedDial,\r\n        TempPage,\r\n        TempDialog,\r\n        TempPopover,\r\n    ],\r\n    providers: [\r\n        {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n        appRoutingProviders,\r\n    ],\r\n    bootstrap: [\r\n        KitchenSink,\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA,\r\n    ],\r\n})\r\nclass AppModule {}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n.catch(err => console.error(err));\r\n\n\n\n// WEBPACK FOOTER //\n// src/app.ts","/// <reference path=\"../dist/onsenui.d.ts\" />\n\nexport * from '@angular/core';\nexport * from './directives/ons-navigator';\nexport * from './directives/ons-tabbar';\nexport * from './directives/ons-switch';\nexport * from './directives/ons-range';\nexport * from './directives/ons-input';\nexport * from './directives/ons-pull-hook';\nexport * from './directives/ons-lazy-repeat';\nexport * from './directives/ons-splitter';\n\nexport * from './ons/notification';\nexport * from './ons/platform';\nexport * from './ons/alert-dialog-factory';\nexport * from './ons/popover-factory';\nexport * from './ons/dialog-factory';\nexport * from './ons/modal-factory';\nexport * from './ons/params';\n\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {OnsNavigator} from './directives/ons-navigator';\nimport {OnsTab} from './directives/ons-tabbar';\nimport {OnsSwitch} from './directives/ons-switch';\nimport {OnsRange} from './directives/ons-range';\nimport {OnsInput} from './directives/ons-input';\nimport {OnsPullHook} from './directives/ons-pull-hook';\nimport {OnsLazyRepeat} from './directives/ons-lazy-repeat';\nimport {OnsSplitterSide, OnsSplitterContent} from './directives/ons-splitter';\n\nimport {AlertDialogFactory} from './ons/alert-dialog-factory';\nimport {PopoverFactory} from './ons/popover-factory';\nimport {DialogFactory} from './ons/dialog-factory';\nimport {ModalFactory} from './ons/modal-factory';\nimport {ComponentLoader} from './ons/component-loader';\n\nconst directives = [\n  OnsNavigator,\n  OnsTab,\n  OnsSwitch,\n  OnsRange,\n  OnsInput,\n  OnsPullHook,\n  OnsLazyRepeat,\n  OnsSplitterSide,\n  OnsSplitterContent\n];\n\n@NgModule({\n  imports: [BrowserModule, CommonModule],\n  declarations: [directives],\n  exports: [\n    directives,\n    BrowserModule\n  ],\n  providers: [\n    AlertDialogFactory,\n    PopoverFactory,\n    DialogFactory,\n    ModalFactory,\n    ComponentLoader\n  ]\n})\nexport class OnsenModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/angular2-onsenui.ts","import {\n  Component,\n  Injector,\n  ReflectiveInjector,\n  Directive,\n  ElementRef,\n  ComponentRef,\n  Type,\n  ComponentFactoryResolver,\n  Input,\n  ViewContainerRef,\n  OnDestroy\n} from '@angular/core';\nimport {Params} from '../ons/params';\n\ndeclare const ons: any;\n\nexport class NavigatorPage {\n  constructor(\n    public elementRef: ElementRef = null,\n    public destroy: Function = function() {},\n    public animator: any = null,\n    public params: Params = new Params()) {\n  }\n}\n\n/**\n * @element ons-navigator\n * @directive OnsNavigator\n * @selector ons-navigator\n * @codpen KgvAvx\n * @description\n *   [en]Angular 2 directive for `<ons-navigator>` component.[/en]\n *   [ja]`<ons-navigator>`要素のAngular 2ディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Page</div>\n *       </ons-toolbar>\n *       <div class=\"content\">...</div>\n *     `\n *   })\n *   class DefaultPageComponent { }\n *\n *   @Component({\n *     selector: 'navigator-app',\n *     template: `\n *     <ons-navigator [page]=\"page\"></ons-navigator>\n *     `\n *   })\n *   export class AppComponent {\n *     page = DefaultPageComponent\n *   }\n */\n@Directive({\n  selector: 'ons-navigator'\n})\nexport class OnsNavigator implements OnDestroy {\n  private _lastPageLoader: Function;\n\n  /**\n   * @input page\n   * @type {Type<any>}\n   * @desc\n   *   [en]Type of the page component.[/en]\n   *   [ja]ページコンポーネントのクラスを指定します。[/ja]\n   */\n  @Input('page') set pageComponentType(page: Type<any>) {\n    if (this.element.pages.length == 0) {\n      this.element.pushPage(page);\n    }\n  }\n\n  get element(): any {\n    return this._elementRef.nativeElement;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _resolver: ComponentFactoryResolver,\n    private _viewContainer: ViewContainerRef,\n    private _injector: Injector) {\n    this._lastPageLoader = this.element.pageLoader;\n    this.element.pageLoader = this._createPageLoader();\n  }\n\n  _createPageLoader() {\n    const componentRefMap:WeakMap<HTMLElement, ComponentRef<any>> = new WeakMap<HTMLElement, ComponentRef<any>>();\n\n    return new ons.PageLoader(\n      ({page, parent, params}, done: Function) => {\n        const pageParams = new Params(params || {});\n        const injector = ReflectiveInjector.resolveAndCreate([\n          {provide: Params, useValue: pageParams},\n          {provide: OnsNavigator, useValue: this}\n        ], this._injector);\n\n        const factory = this._resolver.resolveComponentFactory(page);\n        const selector = 'ons-navigator';\n        const pageComponentRef = factory.create(injector, null);\n        this._viewContainer.insert(pageComponentRef.hostView);\n        const pageElement = pageComponentRef.location.nativeElement;\n        componentRefMap.set(pageElement, pageComponentRef);\n\n        this.element.appendChild(pageElement); // dirty fix to insert in correct position\n\n        done(pageElement);\n      },\n      element => {\n        if (componentRefMap.has(element)) {\n          componentRefMap.get(element).destroy();\n          componentRefMap.delete(element);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.element.pageLoader = this._lastPageLoader;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-navigator.ts","\nexport class Params {\n  constructor(private _data = {}) {}\n\n  at(key: string): any {\n    return this._data[key];\n  }\n\n  get data(): any {\n    return this._data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/params.ts","import {\n  Component,\n  ComponentRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Injector,\n  Directive,\n  ElementRef,\n  Type,\n  Input,\n  OnDestroy\n} from '@angular/core';\n\n/**\n * @element ons-tab\n * @directive OnsTab\n * @selector ons-tab\n * @description\n *   [en]Angular 2 directive for `<ons-tab>` component.[/en]\n *   [ja]`<ons-tab>`要素のためのディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Page</div>\n *       </ons-toolbar>\n *       <div class=\"content\">...</div>\n *     `\n *   })\n *   class PageComponent {\n *   }\n *\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-tabbar>\n *       <div class=\"tab-bar__content\"></div>\n *       <div class=\"tab-bar\">\n *         <ons-tab label=\"Page1\" icon=\"ion-home\" [page]=\"page\" active></ons-tab>\n *         <ons-tab label=\"Page2\" icon=\"ion-help\" [page]=\"page\"></ons-tab>\n *         <ons-tab label=\"Page3\" icon=\"ion-stop\" [page]=\"page\"></ons-tab>\n *       </div>\n *     </ons-tabbar>\n *     `\n *   })\n *   export class AppComponent {\n *     page = PageComponent\n *   }\n */\n@Directive({\n  selector: 'ons-tab'\n})\nexport class OnsTab implements OnDestroy {\n  private _pageComponent: ComponentRef<any> = null;\n\n  /**\n   * @input page\n   * @type {Type<any>}\n   * @desc\n   *   [en]Specify the page component that is displayed when the tab is active.[/en]\n   *   [ja]読み込むページコンポーネントを指定します。[/ja]\n   */\n  @Input('page') set page(pageComponentType: Type<any>) {\n    this._elementRef.nativeElement.page = pageComponentType;\n  }\n\n  constructor(private _elementRef: ElementRef,\n    private _viewContainer: ViewContainerRef,\n    private _resolver: ComponentFactoryResolver) {\n\n    // set up ons-tab's page loader\n    this._elementRef.nativeElement.pageLoader = new (<any>ons.PageLoader)( // FIXME\n      ({page, parent}, done: Function) => {\n        const factory = this._resolver.resolveComponentFactory(page);\n        const pageComponentRef = this._viewContainer.createComponent(factory, 0);\n\n        if (this._pageComponent) {\n          this._pageComponent.destroy();\n        }\n        this._pageComponent = pageComponentRef;\n\n        const pageElement = pageComponentRef.location.nativeElement;\n        parent.appendChild(pageElement); // dirty fix to insert in correct position\n\n        done(pageElement);\n      },\n      () => {\n        if (this.hasOwnProperty('_pageComponent')) {\n          this._pageComponent.destroy();\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this._pageComponent) {\n      this._pageComponent.destroy();\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-tabbar.ts","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges\n} from '@angular/core';\n\n/**\n * @element ons-switch\n * @directive OnsSwitch\n * @selector ons-switch\n * @description\n *   [en]Angular 2 directive for `<ons-switch>` component.[/en]\n *   [ja]`<ons-switch>`要素のAngular 2ディレクティブです。[/ja]\n * @example\n *   <ons-switch [(value)]=\"target\"></ons-switch>\n */\n@Directive({\n  selector: 'ons-switch'\n})\nexport class OnsSwitch implements OnChanges, OnDestroy {\n  private _element: any;\n  private _boundOnChange: Function;\n\n  /**\n   * @input value\n   * @type {boolean}\n   * @desc\n   *   [en]Specify the value of the `<ons-switch>` component.[/en]\n   *   [ja]`ons-switch`コンポーネントに設定する値を指定します。[/ja]\n   */\n  @Input('value') set value(target: boolean) {\n    this._element.checked = !!target;\n  }\n\n  /**\n   * @output valueChange\n   * @type {string}\n   * @desc\n   *   [en]Triggers when the value is changed.[/en]\n   *   [ja]値が変更された時に発火します。[/ja]\n   */\n  @Output('valueChange') _valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('change', this._boundOnChange);\n  }\n\n  _onChange(event) {\n    this._valueChange.emit(this._element.checked);\n  }\n\n  ngOnChanges(changeRecord: SimpleChanges) {\n    const value = !!(<any>changeRecord).value.currentValue;\n    this._element.checked = value;\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('change', this._boundOnChange);\n    this._element = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-switch.ts","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChange\n} from '@angular/core';\n\n/**\n * @element ons-range\n * @directive OnsRange\n * @selector ons-range\n * @description\n *   [en]Angular 2 directive for `<ons-range>` component.[/en]\n *   [ja]`<ons-range>`要素のAngular 2ディレクティブです。[/en]\n * @example\n *   <ons-range [(value)]=\"foo\"></ons-range><br>\n *\n *   <!-- Add (input) to change immediately on dragging range component -->\n *   <ons-range [(value)]=\"bar\" (input)=\"bar = $event.target.value\"></ons-range>\n */\n@Directive({\n  selector: 'ons-range'\n})\nexport class OnsRange implements OnChanges, OnDestroy {\n  private _element: any;\n  private _boundOnChange: Function;\n\n  /**\n   * @input value\n   * @type {string}\n   * @desc\n   *   [en]Input value of the `<ons-range>` element..[/en]\n   *   [ja]`ons-range`要素に対する入力値を指定します。[/ja]\n   */\n  @Input('value') _value: string;\n\n  /**\n   * @output valueChange\n   * @type {string}\n   * @desc\n   *   [en]Triggers when the value is changed.[/en]\n   *   [ja]値が変更された時に発火します。[/ja]\n   */\n  @Output('valueChange') _valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('change', this._boundOnChange);\n  }\n\n  _onChange(event) {\n    this._valueChange.emit(this._element.value);\n  }\n\n  ngOnChanges(changeRecord: {[key: string]: SimpleChange;}) {\n    const value = changeRecord['_value'].currentValue;\n    this._element.value = value;\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('change', this._boundOnChange);\n\n    this._element = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-range.ts","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChange\n} from '@angular/core';\n\n/**\n * @element ons-input\n * @directive OnsInput\n * @selector ons-input\n * @description\n *   [en]Angular 2 directive for `<ons-input>` component.[/en]\n *   [ja]`<ons-input>`要素のAngular 2ディレクティブです。[/ja]\n * @example\n *   <ons-input [(value)]=\"value\"></ons-input>\n */\n@Directive({\n  selector: 'ons-input'\n})\nexport class OnsInput implements OnChanges, OnDestroy {\n  private _element: any;\n  private _boundOnChange: Function;\n\n  /**\n   * @input value\n   * @type {string}\n   * @desc\n   *   [en]Input value for the internal `<input>` element.[/en]\n   *   [ja]内部の`input`要素に対する入力値を設定します。[/ja]\n   */\n  @Input('value') _value: string;\n\n  /**\n   * @output valueChange\n   * @type {string}\n   * @desc\n   *   [en]Triggers when the value is changed.[/en]\n   *   [ja]内部の`input`要素の値が変更された時に発火します。[/ja]\n   */\n  @Output('valueChange') _valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('input', this._boundOnChange);\n  }\n\n  _onChange(event) {\n    this._valueChange.emit(this._element.value);\n  }\n\n  ngOnChanges(changeRecord: {[key: string]: SimpleChange;}) {\n    const value = changeRecord['_value'].currentValue;\n    this._element.value = value;\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('change', this._boundOnChange);\n\n    this._element = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-input.ts","import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  OnDestroy,\n  EventEmitter\n} from '@angular/core';\n\n/**\n * @element ons-pull-hook\n * @directive OnsPullHook\n * @selector ons-pull-hook\n * @description\n *   [en]Angular 2 directive for `<ons-pull-hook>` component.[/en]\n *   [ja]`<ons-pull-hook>`要素のためのAngular2ディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-page>\n *       <ons-toolbar>\n *         <div class=\"center\">Pull Hook</div>\n *       </ons-toolbar>\n *       <div class=\"content\">\n *         <ons-pull-hook height=\"64px\" threshold-height=\"128px\" \n *           (changestate)=\"onChangeState($event)\" (action)=\"onAction($event)\">\n *           {{message}}\n *         </ons-pull-hook>\n *       </div>\n *     </ons-page>\n *     `\n *   })\n *   export class AppComponent {\n *     message: string = 'Pull down to refresh';\n *\n *     onAction($event) {\n *       setTimeout(() => {\n *         $event.done();\n *       }, 1000);\n *     }\n *\n *     onChangeState($event) {\n *       switch ($event.state) {\n *         case 'initial':\n *           this.message = 'Pull down to refresh';\n *           break;\n *         case 'preaction':\n *           this.message = 'Release to refresh';\n *           break;\n *         case 'action':\n *           this.message = 'Loading data...';\n *           break;\n *       }\n *     }\n *   }\n */\n@Directive({\n  selector: 'ons-pull-hook'\n})\nexport class OnsPullHook implements OnDestroy {\n  private _element: any;\n\n  /**\n   * @output action\n   * @param {Object} $event\n   * @param {Function} $event.done\n   * @desc\n   *   [en]Action to trigger.[/en]\n   *   [ja]`ons-pull-hook`要素のアクションが必要なときに呼び出されます。[/ja]\n   */\n  @Output('action') action = new EventEmitter();\n\n  /**\n   * @output changestate\n   * @param {Object} $event\n   * @param {String} $event.state\n   * @desc\n   *   [en][/en]\n   *   [ja]`ons-pull-hook`要素の状態が変わった時に呼び出されます。[/ja]\n   */\n  constructor(private _elementRef: ElementRef) {\n    this._element = _elementRef.nativeElement;\n    this._element.onAction = done => this.action.emit({done});\n  }\n\n  ngOnDestroy() {\n    this._element.onAction = null;\n    this._element = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-pull-hook.ts","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nexport class ItemContext {\n  constructor(public $implicit: any, public index: number, public count: number) {\n  }\n}\n\n/**\n * @element ons-lazy-repeat\n * @directive OnsLazyRepeat\n * @selector [ons-lazy-repeat]\n * @description\n *   [en]Angular 2 directive for `<ons-lazy-repeat>` component.[/en]\n *   [en]`<ons-lazy-repeat>`要素と同じ機能を提供するAngular 2ディレクティブです。[/en]\n * @example\n *   <ons-list>\n *     <ons-list-item *onsLazyRepeat=\"let item of items; let i = index\">\n *       #{{i}} {{item.msg}}\n *     </ons-list-item>\n *   </ons-list>\n */\n@Directive({\n  selector: '[onsLazyRepeat]'\n})\nexport class OnsLazyRepeat implements OnDestroy {\n  private _element: any;\n  private _provider: any;\n  private _onsLazyRepeatOf: any;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _templateRef: TemplateRef<ItemContext>,\n    private _viewContainer: ViewContainerRef) {\n  }\n\n  /**\n   * @input onsLazyRepeat\n   * @desc\n   *   [en]Render infinite lists with \"let of\" syntax in Angular 2.[/en]\n   *   [ja]let of式を指定します。[/ja]\n   * @example\n   *  <ons-list>\n   *    <ons-list-item *onsLazyRepeat=\"let message of messages\">\n   *      {{message}}\n   *    </ons-list-item>\n   *  </ons-list>\n   */\n  @Input() set onsLazyRepeatOf(value: any) {\n    this._onsLazyRepeatOf = value;\n\n    this._provider = new (<any>ons)._internal.LazyRepeatProvider(\n      this._elementRef.nativeElement.parentElement,\n      new (<any>ons)._internal.LazyRepeatDelegate({\n        loadItemElement: (index, parent, done) => {\n          this._loadItemTemplate(index, parent, done);\n        },\n        countItems: () => {\n          return this._onsLazyRepeatOf.length;\n        }\n      })\n    );\n  }\n\n  _loadItemTemplate(index, parent, done) {\n    const context = new ItemContext(this._onsLazyRepeatOf[index], index, this._onsLazyRepeatOf.length);\n    const view = this._viewContainer.createEmbeddedView(this._templateRef, context);\n    // dirty fix on createEmbeddedView() does not insert DOM element randomly.\n    parent.appendChild(view.rootNodes[0]); \n\n    done(view.rootNodes[0]);\n  }\n\n  refresh() {\n    if (this._provider) {\n      this._viewContainer.clear();\n      this._provider.refresh();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._provider) {\n      this._provider.destroy();\n    }\n    this._viewContainer.clear();\n    this._provider = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-lazy-repeat.ts","import {\n  Type,\n  ComponentRef,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ReflectiveInjector,\n  OnInit,\n  ViewContainerRef,\n  ComponentFactoryResolver\n} from '@angular/core';\nimport {Params} from '../ons/params';\n\ndeclare const ons: any;\n\n/**\n * @element ons-splitter-side\n * @directive OnsSplitterSide\n * @selector ons-splitter-side\n * @description\n *   [ja]`<ons-splitter-side>`要素のAngular 2ディレクティブです。[/ja]\n *   [en]Angular 2 directive for `<ons-splitter-side>` component.[/en]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Left Page</div> \n *       </ons-toolbar>\n *       <div class=\"background\"></div>\n *       <div class=\"content\">\n *         Left\n *       </div>\n *     `\n *   })\n *   class SidePageComponent { }\n *\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-splitter>\n *       <ons-splitter-side [page]=\"sidePage\" side=\"left\" width=\"200px\">\n *       </ons-splitter-side>\n *       <ons-splitter-content>...</ons-splitter-content>\n *     </ons-splitter>\n *     `\n *   })\n *   export class AppComponent {\n *     sidePage = SidePageComponent;\n *   }\n */\n@Directive({\n  selector: 'ons-splitter-side'\n})\nexport class OnsSplitterSide {\n\n  /**\n   * @input page\n   * @type {Type<any>}\n   * @desc\n   *   [en]Page content.[/en]\n   *   [ja]表示するページコンポーネントのクラスを指定します。[/en]\n   */\n  @Input('page') set page(page: Type<any>) {\n    this.element.page = page;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewContainer: ViewContainerRef,\n    private _resolver: ComponentFactoryResolver,\n    private _injector: Injector) {\n    this.element.pageLoader = this._createPageLoader();\n  }\n\n  get element() {\n    return this._elementRef.nativeElement;\n  }\n\n  _createPageLoader() {\n    const componentRefMap:WeakMap<HTMLElement, ComponentRef<any>> = new WeakMap<HTMLElement, ComponentRef<any>>();\n\n    return new ons.PageLoader(\n      ({page, parent, params}, done: Function) => {\n        const injector = ReflectiveInjector.resolveAndCreate([\n          {provide: Params, useValue: new Params(params || {})},\n          {provide: OnsSplitterSide, useValue: this}\n        ], this._injector);\n\n          const factory = this._resolver.resolveComponentFactory(page);\n          const pageComponentRef = this._viewContainer.createComponent(factory, 0, injector);\n          const pageElement = pageComponentRef.location.nativeElement;\n          componentRefMap.set(pageElement, pageComponentRef);\n\n          this.element.appendChild(pageElement); // dirty fix to insert in correct position\n\n          done(pageElement);\n      },\n      element => {\n        if (componentRefMap.has(element)) {\n          componentRefMap.get(element).destroy();\n          componentRefMap.delete(element);\n        }\n      }\n    );\n  }\n}\n\n/**\n * @element ons-splitter-content\n * @directive OnsSplitterContent\n * @selector ons-splitter-content\n * @description\n *    [ja]`<ons-splitter-content>`要素のためのAngular2 ディレクティブです。[/ja]\n *    [en]Angular 2 directive for `<ons-splitter-content>` component.[/en]\n */\n@Directive({\n  selector: 'ons-splitter-content'\n})\nexport class OnsSplitterContent {\n  /**\n   * @input page\n   * @type {Type<any>}\n   * @desc\n   *   [en]Specify the page component.[/en]\n   *   [ja]表示するページコンポーネントのクラスを指定します。[/en]\n   */\n  @Input('page') set page(page: Type<any>) {\n    this.element.page = page;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewContainer: ViewContainerRef,\n    private _resolver: ComponentFactoryResolver,\n    private _injector: Injector) {\n    this.element.pageLoader = this._createPageLoader();\n  }\n\n  get element() {\n    return this._elementRef.nativeElement;\n  }\n\n  _createPageLoader() {\n    const componentRefMap:WeakMap<HTMLElement, ComponentRef<any>> = new WeakMap<HTMLElement, ComponentRef<any>>();\n\n    return new ons.PageLoader(\n      ({page, parent, params}, done: Function) => {\n        const injector = ReflectiveInjector.resolveAndCreate([\n          {provide: Params, useValue: new Params(params || {})},\n          {provide: OnsSplitterContent, useValue: this}\n        ], this._injector);\n\n        const factory = this._resolver.resolveComponentFactory(page);\n        const pageComponentRef = this._viewContainer.createComponent(factory, 0, injector);\n        const pageElement = pageComponentRef.location.nativeElement;\n        componentRefMap.set(pageElement, pageComponentRef);\n\n        this.element.appendChild(pageElement); // dirty fix to insert in correct position\n\n        done(pageElement);\n      },\n      element => {\n        if (componentRefMap.has(element)) {\n          componentRefMap.get(element).destroy();\n          componentRefMap.delete(element);\n        }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/directives/ons-splitter.ts","/**\n * @object onsNotification\n */\nexport const onsNotification = ons.notification;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/notification.ts","export const onsPlatform = ons.platform;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/platform.ts","import {\n  Injector,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  ReflectiveInjector,\n  Type\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface AlertDialogRef {\n  alertDialog: any;\n  destroy: Function;\n}\n\n/**\n * @object AlertDialogFactory\n */\n@Injectable()\nexport class AlertDialogFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader\n  ) {\n  }\n\n  createAlertDialog(componentType: Type<any>, params: Object = {}): Promise<AlertDialogRef> {\n    return new Promise(resolve => {\n      setImmediate(() => {\n        const factory = this._resolver.resolveComponentFactory(componentType);\n        const injector = ReflectiveInjector.resolveAndCreate([\n          {provide: Params, useValue: new Params(params)}\n        ], this._injector);\n        const componentRef = factory.create(injector);\n        const rootElement = componentRef.location.nativeElement;\n\n        this._componentLoader.load(componentRef);\n\n        const element = rootElement.children[0];\n        const alertDialogElement = element.tagName === 'ONS-ALERT-DIALOG' ? element : element.querySelector('ons-alert-dialog');\n\n        if (!alertDialogElement) {\n          throw Error('<ons-alert-dialog> element is not found in component\\'s template.');\n        }\n\n        resolve({alertDialog: alertDialogElement, destroy: () => componentRef.destroy()});\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/alert-dialog-factory.ts","import {\n  Injector,\n  Injectable,\n  ApplicationRef,\n  ComponentRef\n} from '@angular/core';\n\n@Injectable()\nexport class ComponentLoader {\n  constructor(private appRef: ApplicationRef) {\n  }\n\n  // Load an instance of ComponentRef in app view.\n  load(componentRef: ComponentRef<any>) {\n    const rootElement = componentRef.location.nativeElement;\n\n    if (this.appRef['attachView']) {\n      // angular2.3.x has `attachView` and `detachView` methods.\n      this.appRef['attachView'](componentRef.hostView);\n\n      componentRef.onDestroy(() => {\n        this.appRef['detachView'](componentRef.hostView);\n\n        if (rootElement.parentNode) {\n          rootElement.parentNode.removeChild(rootElement);\n        }\n      });\n    } else {\n      if (this.appRef['registerChangeDetector']) {\n        this.appRef['registerChangeDetector'](componentRef.changeDetectorRef);\n      }\n\n      componentRef.onDestroy(() => {\n        if (this.appRef['unregisterChangeDetector']) {\n          this.appRef['unregisterChangeDetector'](componentRef.changeDetectorRef);\n        }\n\n        if (rootElement.parentNode) {\n          rootElement.parentNode.removeChild(rootElement);\n        }\n      });\n    }\n\n    const rootContainer = this.appRef['_rootComponents'][0].location.nativeElement;\n    rootContainer.appendChild(rootElement);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/component-loader.ts","import {\n  Injector,\n  ElementRef,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  ViewContainerRef,\n  ReflectiveInjector,\n  Type\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface PopoverRef {\n  popover: any;\n  destroy: Function;\n}\n\n/**\n * @object PopoverFactory\n */\n@Injectable()\nexport class PopoverFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader\n  ) {\n  }\n\n  createPopover(componentType: any, params: Object = {}): Promise<PopoverRef> { // TODO: fix \"any\"\n    return new Promise(resolve => {\n      setImmediate(() => {\n        const factory = this._resolver.resolveComponentFactory(componentType);\n        const injector = ReflectiveInjector.resolveAndCreate([\n          {provide: Params, useValue: new Params(params)}\n        ], this._injector);\n        const componentRef = factory.create(injector);\n        const rootElement = componentRef.location.nativeElement;\n\n        this._componentLoader.load(componentRef);\n\n        const element = rootElement.children[0];\n        const popoverElement = element.tagName === 'ONS-POPOVER' ? element : element.querySelector('ons-popover');\n\n        if (!popoverElement) {\n          throw Error('<ons-popover> element is not found in component\\'s template.');\n        }\n\n        resolve({popover: popoverElement, destroy: () => componentRef.destroy()});\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/popover-factory.ts","import {\n  Injector,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  ReflectiveInjector,\n  Type\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface DialogRef {\n  dialog: any;\n  destroy: Function;\n}\n\n/**\n * @object DialogFactory\n */\n@Injectable()\nexport class DialogFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader\n  ) {\n  }\n\n  createDialog(componentType: Type<any>, params: Object = {}): Promise<DialogRef> { // TODO: fix \"any\"\n    return new Promise(resolve => {\n      setImmediate(() => {\n        const factory = this._resolver.resolveComponentFactory(componentType);\n        const injector = ReflectiveInjector.resolveAndCreate([\n          {provide: Params, useValue: new Params(params)}\n        ], this._injector);\n        const componentRef = factory.create(injector);\n        const rootElement = componentRef.location.nativeElement;\n\n        this._componentLoader.load(componentRef);\n\n        const element = rootElement.children[0];\n        const dialogElement = element.tagName === 'ONS-DIALOG' ? element : element.querySelector('ons-dialog');\n\n        if (!dialogElement) {\n          throw Error('<ons-dialog> element is not found in component\\'s template.');\n        }\n\n        resolve({dialog: dialogElement, destroy: () => componentRef.destroy()});\n      });\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/dialog-factory.ts","import {\n  Injector,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  ReflectiveInjector,\n  Type\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface ModalRef {\n  modal: any;\n  destroy: Function;\n}\n\n/**\n * @object ModalFactory\n */\n@Injectable()\nexport class ModalFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader\n  ) {\n  }\n\n  createModal(componentType: Type<any>, params: Object = {}): Promise<ModalRef> {\n    return new Promise(resolve => {\n      setImmediate(() => {\n        const factory = this._resolver.resolveComponentFactory(componentType);\n        const injector = ReflectiveInjector.resolveAndCreate([\n          {provide: Params, useValue: new Params(params)}\n        ], this._injector);\n        const componentRef = factory.create(injector);\n        const rootElement = componentRef.location.nativeElement;\n\n        this._componentLoader.load(componentRef);\n\n        const element = rootElement.children[0];\n        const modalElement = element.tagName === 'ONS-MODAL' ? element : element.querySelector('ons-modal');\n\n        if (!modalElement) {\n          throw Error('<ons-modal> element is not found in component\\'s template.');\n        }\n\n        resolve({modal: modalElement, destroy: () => componentRef.destroy()});\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-onsenui/src/ons/modal-factory.ts","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {Home}        from './app/components/home/home';\r\nimport {Animations}  from './app/components/animations/animations';\r\nimport {Forms}       from './app/components/forms/forms';\r\nimport {Dialogs}     from './app/components/dialogs/dialogs';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'home',       component: Home,       },\r\n  { path: 'forms',      component: Forms,      },\r\n  { path: 'dialogs',    component: Dialogs,    },\r\n  { path: 'animations', component: Animations, },\r\n  { path: '',           component: Home,       },\r\n  { path: '**',         component: Home,       },\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [\r\n\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// src/app.routing.ts","import {Component} from '@angular/core';\r\nimport {OnsNavigator} from 'angular2-onsenui';\r\n\r\nimport {PullHook} from './demos/pull-hook';\r\nimport {LazyRepeat} from './demos/lazy-repeat';\r\nimport {Splitter} from './demos/splitter';\r\nimport {Fab} from './demos/fab';\r\nimport {SpeedDial} from './demos/speed-dial';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: 'app/components/home/home.html',\r\n})\r\nexport class Home {\r\n\r\n  constructor(private _navigator : OnsNavigator) {\r\n  }\r\n\r\n  log(){\r\n    console.log(this._navigator);\r\n  }\r\n\r\n  push(page) {\r\n    var component = { PullHook, LazyRepeat, Splitter, Fab, SpeedDial }[page];\r\n    this._navigator.element.pushPage(component,  {animation: 'fade '}, {})\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/home/home.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ons-page[pull-hook]',\r\n  template: `\r\n  <ons-toolbar>\r\n  <div class=\"left\"><ons-back-button>Atrás</ons-back-button></div>\r\n  <div class=\"center\"> Arrastrar y soltar (lazy repeat)</div>\r\n</ons-toolbar>\r\n\r\n  <div class=\"page__background\"></div>\r\n  <div class=\"page__content\">\r\n    <div class=\"scroll\">\r\n      <ons-pull-hook height=\"64px\" threshold-height=\"128px\" (changestate)=\"onChangeState($event)\" (action)=\"onAction($event)\">\r\n        {{message}}\r\n      </ons-pull-hook>\r\n\r\n      <ons-list>\r\n        <ons-list-item *ngFor=\"let item of data\">\r\n          <div class=\"left\"><img class=\"list__item__thumbnail\" [src]=\"item.url\"></div>\r\n          <div class=\"center\">{{item.name}}</div>\r\n        </ons-list-item>\r\n      </ons-list>\r\n    </div>\r\n  </div>\r\n  `,\r\n})\r\nexport class PullHook {\r\n  data: Array<any> = [];\r\n\r\n  timeout: any = 0;\r\n\r\n  message: string = 'Arrastra hacia abajo';\r\n\r\n  messages: { [key: string]: string } = {\r\n    initial: 'Arrastra hacia abajo',\r\n    preaction: 'Suelta',\r\n    action: 'Cargando...'\r\n  };\r\n\r\n  getRandomName() {\r\n    const names = ['Oscar', 'Max', 'Tiger', 'Sam', 'Misty', 'Simba', 'Coco', 'Chloe', 'Lucy', 'Missy'];\r\n    return names[Math.floor(Math.random() * names.length)];\r\n  }\r\n\r\n  getRandomUrl() {\r\n    var width = 40 + Math.floor(20 * Math.random());\r\n    var height= 40 + Math.floor(20 * Math.random());\r\n\r\n    return `https://placekitten.com/g/${width}/${height}`;\r\n  }\r\n\r\n  getRandomKitten() {\r\n    return {\r\n      name: this.getRandomName(),\r\n      url: this.getRandomUrl()\r\n    };\r\n  }\r\n\r\n  updateData() {\r\n    this.data = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      this.data.push(this.getRandomKitten());\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateData();\r\n  }\r\n\r\n  onAction($event) {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.updateData();\r\n      $event.done();\r\n    }, 1000);\r\n  }\r\n\r\n  onChangeState($event) {\r\n    this.message = this.messages[$event.state];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/home/demos/pull-hook.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ons-page[lazy-repeat]',\r\n  template: `\r\n  <ons-toolbar>\r\n    <div class=\"left\"><ons-back-button>Atrás</ons-back-button></div>\r\n    <div class=\"center\"> Scroll Interminable (lazy repeat)</div>\r\n  </ons-toolbar>\r\n\r\n  <div class=\"page__background\"></div>\r\n  <div class=\"page__content\">\r\n    <ons-list>\r\n      <ons-list-item *onsLazyRepeat=\"let item of items; let i = index\">\r\n        Item {{i}}\r\n      </ons-list-item>\r\n    </ons-list>\r\n  </div>\r\n  `,\r\n})\r\nexport class LazyRepeat {\r\n  items: Array<any> = [];\r\n\r\n  ngOnInit() {\r\n    for (var i = 0; i < 1000; ++i) {\r\n      this.items.push(i);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/home/demos/lazy-repeat.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ons-page[splitter]',\r\n  template: `\r\n  <div class=\"page__background\"></div>\r\n  <div class=\"page__content\">\r\n    <ons-splitter>\r\n      <ons-splitter-side side=\"right\" width=\"240px\" swipeable collapse #menu>\r\n        <ons-page>\r\n          <ons-list>\r\n            <ons-list-header>Menu</ons-list-header>\r\n            <ons-list-item modifier=\"longdivider\" tappable *ngFor=\"let i of [1, 2, 3, 4]\">\r\n              Menu item #{{i}}\r\n            </ons-list-item>\r\n          </ons-list>\r\n        </ons-page>\r\n      </ons-splitter-side>\r\n\r\n      <ons-splitter-content>\r\n        <ons-page>\r\n          <ons-toolbar>\r\n            <div class=\"left\"><ons-back-button>Back</ons-back-button></div>\r\n            <div class=\"center\">Sliding menu</div>\r\n            <div class=\"right\" (click)=\"menu.open()\">\r\n              <ons-toolbar-button>=</ons-toolbar-button>\r\n            </div>\r\n          </ons-toolbar>\r\n          <p>Swipe left to open menu!</p>\r\n        </ons-page>\r\n      </ons-splitter-content>\r\n    </ons-splitter>\r\n  </div>\r\n  `,\r\n})\r\nexport class Splitter {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/home/demos/splitter.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ons-page[fab]',\r\n  template: `\r\n  <ons-toolbar>\r\n    <div class=\"left\"><ons-back-button>Back</ons-back-button></div>\r\n    <div class=\"center\">Floating Action Button</div>\r\n  </ons-toolbar>\r\n\r\n  <div class=\"page__background\"></div>\r\n  <div class=\"page__content\">\r\n    <ons-fab position=\"bottom right\" ripple>+</ons-fab>\r\n  </div>\r\n  `,\r\n})\r\nexport class Fab {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/home/demos/fab.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ons-page[speed-dial]',\r\n  template: `\r\n  <ons-toolbar>\r\n    <div class=\"left\"><ons-back-button>Atrás</ons-back-button></div>\r\n    <div class=\"center\"> Boton que hace aparecer cosas</div>\r\n  </ons-toolbar>\r\n\r\n  <div class=\"page__background\"></div>\r\n  <div class=\"page__content\">\r\n    <p>Al apretar el boton flotante aparecen objetos como en un menu.</p>\r\n    <ons-speed-dial position=\"bottom right\">\r\n      <ons-fab>+</ons-fab>\r\n      <ons-speed-dial-item>a</ons-speed-dial-item>\r\n      <ons-speed-dial-item>b</ons-speed-dial-item>\r\n      <ons-speed-dial-item>c</ons-speed-dial-item>\r\n    </ons-speed-dial>\r\n  </div>\r\n  `,\r\n})\r\nexport class SpeedDial {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/home/demos/speed-dial.ts","import {Component} from '@angular/core';\r\nimport {OnsNavigator} from 'angular2-onsenui';\r\n\r\n@Component({\r\n  selector: 'ons-page[temp]',\r\n  template: `\r\n    <div class=\"waiting\">Please wait...</div>\r\n   `,\r\n  styles: [`\r\n    .waiting {\r\n      text-align: center;\r\n      font-size: 24px;\r\n      margin: 100px auto 0;\r\n    }\r\n  `],\r\n})\r\nexport class TempPage {\r\n  animations = ['none', 'fade', 'slide', 'lift'];\r\n\r\n  constructor(private _navigator : OnsNavigator) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'animations',\r\n  templateUrl: 'app/components/animations/animations.html',\r\n})\r\nexport class Animations {\r\n  animations = ['none', 'fade', 'slide', 'lift'];\r\n\r\n  constructor(private _navigator : OnsNavigator) {\r\n  }\r\n\r\n  push(animation) {\r\n    this._navigator.element.pushPage(TempPage, { animation });\r\n    setTimeout(() => this._navigator.element.popPage(), 1500);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/animations/animations.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'forms',\r\n  templateUrl: 'app/components/forms/forms.html',\r\n})\r\nexport class Forms {\r\n  target = true;\r\n\r\n  switchEnabled = true;\r\n\r\n  vegetables = [\r\n    'Tomato',\r\n    'Cabbage',\r\n    'Cucumber'\r\n  ];\r\n\r\n  selectedVegetable = 'Cabbage';\r\n\r\n  colors = [\r\n    'Red',\r\n    'Blue',\r\n    'Green',\r\n    'Yellow'\r\n  ];\r\n\r\n  name = 'Argelius';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/forms/forms.ts","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport {DialogFactory, PopoverFactory, Params, onsNotification} from 'angular2-onsenui';\r\n\r\n@Component({\r\n  template: `\r\n    <ons-dialog #dialog animation=\"default\" cancelable>\r\n      <div class=\"dialog-mask\"></div>\r\n      <div class=\"dialog\">\r\n        <div class=\"dialog-container\" style=\"height: 220px;\">\r\n          <ons-page>\r\n            <ons-toolbar>\r\n              <div class=\"center\">Name</div>\r\n            </ons-toolbar>\r\n            <div class=\"content\">\r\n              <div style=\"text-align: center\">\r\n                <p>{{message}}</p>\r\n                <br>\r\n                <ons-button (click)=\"dialog.hide()\">Close</ons-button>\r\n              </div>\r\n            </div>\r\n          </ons-page>\r\n        </div>\r\n      </div>\r\n    </ons-dialog>\r\n  `\r\n})\r\nexport class TempDialog {\r\n  message = '';\r\n\r\n  constructor(params: Params) {\r\n    this.message = <string>params.at('message');\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <ons-popover #popover direction=\"up down\" cancelable (prehide)=\"onPreHide($event)\">\r\n      <div style=\"text-align: center;\">\r\n        <p>{{message}}</p>\r\n        <p><ons-button (click)=\"popover.hide()\">Hide</ons-button></p>\r\n      </div>\r\n    </ons-popover>\r\n  `\r\n})\r\nexport class TempPopover {\r\n  message = '';\r\n\r\n  constructor(params: Params) {\r\n    this.message = <string>params.at('msg');\r\n  }\r\n\r\n  onPreHide(event) {\r\n    // event.cancel(); // cancel hiding popover\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialogs',\r\n  templateUrl: 'app/components/dialogs/dialogs.html',\r\n})\r\nexport class Dialogs implements OnInit, OnDestroy{\r\n  private _dialog: any;\r\n  private _popover: any;\r\n  private _destroyDialog: Function;\r\n  private _destroyPopover: Function;\r\n\r\n  constructor(\r\n    private _dialogFactory: DialogFactory,\r\n    private _popoverFactory: PopoverFactory) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._dialogFactory\r\n      .createDialog(TempDialog, {message: 'This is just an example.'})\r\n      .then(({dialog, destroy}) => {\r\n        this._dialog = dialog;\r\n        this._destroyDialog = destroy;\r\n      });\r\n    this._popoverFactory\r\n      .createPopover(TempPopover, {msg: 'This is popover.'})\r\n      .then(({popover, destroy}) => {\r\n        this._popover = popover;\r\n        this._destroyPopover = destroy;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyDialog();\r\n    this._destroyPopover();\r\n  }\r\n\r\n  showDialog() {\r\n    if (this._dialog) {\r\n      this._dialog.show();\r\n    }\r\n  }\r\n\r\n  showPopover(event) {\r\n    if (this._popover) {\r\n      this._popover.show(event.target);\r\n    }\r\n  }\r\n\r\n  alert() {\r\n    onsNotification.alert('Be careful!');\r\n  }\r\n\r\n  confirm(){\r\n    onsNotification.confirm('This is dangerous. Are you sure?');\r\n  }\r\n\r\n  prompt(){\r\n    onsNotification.prompt('What\\'s 42?');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/dialogs/dialogs.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kitchen-sink',\r\n  templateUrl: 'app/kitchen-sink.html',\r\n})\r\nexport class KitchenSink {\r\n\r\n  constructor() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/kitchen-sink.ts","import {Component} from '@angular/core';\r\nimport {onsPlatform} from 'angular2-onsenui';\r\n\r\n@Component({\r\n  selector: 'tabbar',\r\n  templateUrl: 'app/components/tabbar/tabbar.html',\r\n  styleUrls: ['app/components/tabbar/tabbar.css'],\r\n})\r\nexport class Tabbar {\r\n  tabs: Array<any>;\r\n  material: boolean;\r\n\r\n  constructor() {\r\n    this.tabs = [\r\n      { path: 'home',       label: 'Principal',       },\r\n      { path: 'forms',      label: 'Formularios',      },\r\n      { path: 'dialogs',    label: 'Dialogos',    },\r\n      { path: 'animations', label: 'Animaciones', },\r\n    ];\r\n    this.material = onsPlatform.isAndroid();\r\n  }\r\n\r\n  updateStyle(platform: string) {\r\n    this.material = platform === 'android';\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/app/components/tabbar/tabbar.ts"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AClEA;AAaA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AAIA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAPA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;;;AAAA;AAWA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AA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ACA;AACA;AACA;AAVA;AAPA;;;;;;AAMA;AACA;AACA;AACA;;;AAAA;AAUA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AA3CA;AAAA;AAAA;AAAA;AAEA;AAVA;AAHA;AACA;AACA;AAcA;AACA;AACA;AACA;AAhBA;AAAA;;;;;;;;;ACzHA;;AAEA;AACA;;;;;;;;ACHA;;;;;;;;;;;;;;;;;ACAA;AASA;AACA;AAOA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAjCA;AADA;AAIA;AACA;AACA;AACA;AANA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AAQA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAtCA;AADA;AAEA;AADA;AAAA;;;;;;;;;;;;;;;;;ACRA;AAWA;AACA;AAOA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAjCA;AADA;AAIA;AACA;AACA;AACA;AANA;AAAA;;;;;;;;;;;;;;;;;ACvBA;AASA;AACA;AAOA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAjCA;AADA;AAIA;AACA;AACA;AACA;AANA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AASA;AACA;AAOA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAjCA;AADA;AAIA;AACA;AACA;AACA;AANA;AAAA;;;;;;;;ACpBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAlBA;AAJA;AACA;AACA;AACA;AAGA;AAFA;AAAA;;;;;;;;;;;;;;ACbA;AA2BA;AAzBA;AA0BA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AA+CA;AA7CA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AA1DA;AAzBA;AACA;AACA;AAsBA;AACA;AAAA;;;;;;;;;;;;;;AC3BA;AAoBA;AAlBA;AAmBA;AAOA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;AARA;AAlBA;AACA;AACA;AAeA;AACA;AAAA;;;;;;;;;;;;;;ACpBA;AAmCA;AAAA;AAEA;AAAA;AAAA;AAFA;AAjCA;AACA;AACA;AA8BA;AACA;AAAA;;;;;;;;;;;;;;ACnCA;AAgBA;AAAA;AAEA;AAAA;AAAA;AAFA;AAdA;AACA;AACA;AAWA;AACA;AAAA;;;;;;;;;;;;;;AChBA;AAsBA;AAAA;AACA;AAAA;AAAA;AADA;AApBA;AACA;AACA;AAiBA;AACA;AAAA;;;;;;;;;;;;;;;;;ACtBA;AACA;AAeA;AAGA;AAAA;AAFA;AAGA;AAEA;AAEA;AACA;AAAA;AATA;AAbA;AACA;AACA;AAGA;AAOA;AAIA;AAHA;AAAA;AAeA;AAGA;AAAA;AAFA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAdA;AAJA;AACA;AACA;AACA;AAIA;AAHA;AAAA;;;;;;;;;;;;;;;;;AC/BA;AAMA;AAsBA;AArBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAAA;AA3BA;AAJA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;ACNA;AACA;AAyBA;AAGA;AAFA;AAGA;AACA;AACA;AAAA;AANA;AAvBA;AACA;AAqBA;AAIA;AAHA;AAAA;AAkBA;AAGA;AAFA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAVA;AAVA;AACA;AAQA;AAIA;AAHA;AAAA;AAgBA;AAMA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAtDA;AAJA;AACA;AACA;AACA;AAQA;AACA;AARA;AAAA;;;;;;;;;;;;;;;;;AC5DA;AAMA;AAEA;AAAA;AAEA;AAAA;AAJA;AAJA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;ACNA;AACA;AAOA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAlBA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;","sourceRoot":""}